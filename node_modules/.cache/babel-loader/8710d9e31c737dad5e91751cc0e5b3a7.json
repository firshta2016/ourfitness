{"ast":null,"code":"var _jsxFileName = \"/Users/fshefa/development1/getfitwithme/src/contexts/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { auth, db } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport const useAuth = () => {\n  _s();\n\n  return useContext(AuthContext);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true); // const signup = (email, password) => {\n  //   return auth.createUserWithEmailAndPassword(email, password);\n  // };\n  // async function signup(name, email, password) {\n  //   await auth.createUserWithEmailAndPassword(email, password);\n  //   return auth.currentUser.updateProfile({\n  //     displayName: name,\n  //   });\n  // }\n\n  const registerWithEmailAndPassword = async (name, email, password) => {\n    try {\n      const res = await auth.createUserWithEmailAndPassword(email, password);\n      const user = res.user;\n      await db.collection(\"users\").add({\n        uid: user.uid,\n        name,\n        authProvider: \"local\",\n        email\n      });\n    } catch (err) {\n      console.error(err);\n      alert(err.message);\n    }\n  };\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email);\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logout,\n    resetPassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AuthProvider, \"1cdeWWSmbSz3cOWqWLAt+Ta4DMY=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/fshefa/development1/getfitwithme/src/contexts/AuthContext.js"],"names":["React","useContext","useEffect","useState","auth","db","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","registerWithEmailAndPassword","name","email","password","res","createUserWithEmailAndPassword","user","collection","add","uid","authProvider","err","console","error","alert","message","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","unsubscribe","onAuthStateChanged","value","signup"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,IAAT,EAAeC,EAAf,QAAyB,aAAzB;;AACA,MAAMC,WAAW,gBAAGN,KAAK,CAACO,aAAN,EAApB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC3B,SAAOP,UAAU,CAACK,WAAD,CAAjB;AACD,CAFM;;GAAME,O;;AAIb,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC,CAF4C,CAI5C;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMY,4BAA4B,GAAG,OAAOC,IAAP,EAAaC,KAAb,EAAoBC,QAApB,KAAiC;AACpE,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMf,IAAI,CAACgB,8BAAL,CAAoCH,KAApC,EAA2CC,QAA3C,CAAlB;AACA,YAAMG,IAAI,GAAGF,GAAG,CAACE,IAAjB;AACA,YAAMhB,EAAE,CAACiB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B;AAC/BC,QAAAA,GAAG,EAAEH,IAAI,CAACG,GADqB;AAE/BR,QAAAA,IAF+B;AAG/BS,QAAAA,YAAY,EAAE,OAHiB;AAI/BR,QAAAA;AAJ+B,OAA3B,CAAN;AAMD,KATD,CASE,OAAOS,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACAG,MAAAA,KAAK,CAACH,GAAG,CAACI,OAAL,CAAL;AACD;AACF,GAdD;;AAeA,WAASC,KAAT,CAAed,KAAf,EAAsBC,QAAtB,EAAgC;AAC9B,WAAOd,IAAI,CAAC4B,0BAAL,CAAgCf,KAAhC,EAAuCC,QAAvC,CAAP;AACD;;AAED,WAASe,MAAT,GAAkB;AAChB,WAAO7B,IAAI,CAAC8B,OAAL,EAAP;AACD;;AACD,WAASC,aAAT,CAAuBlB,KAAvB,EAA8B;AAC5B,WAAOb,IAAI,CAACgC,sBAAL,CAA4BnB,KAA5B,CAAP;AACD;;AACDf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmC,WAAW,GAAGjC,IAAI,CAACkC,kBAAL,CAAyBjB,IAAD,IAAU;AACpDT,MAAAA,cAAc,CAACS,IAAD,CAAd;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHmB,CAApB;AAIA,WAAOuB,WAAP;AACD,GANQ,EAMN,EANM,CAAT;AAOA,QAAME,KAAK,GAAG;AACZ5B,IAAAA,WADY;AAEZ6B,IAAAA,MAFY;AAGZT,IAAAA,KAHY;AAIZE,IAAAA,MAJY;AAKZE,IAAAA;AALY,GAAd;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEI,KAA7B;AAAA,cACG,CAAC1B,OAAD,IAAYH;AADf;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA3DM;;IAAMD,Y;;KAAAA,Y","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { auth, db } from \"../firebase\";\nconst AuthContext = React.createContext();\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  // const signup = (email, password) => {\n  //   return auth.createUserWithEmailAndPassword(email, password);\n  // };\n\n  // async function signup(name, email, password) {\n  //   await auth.createUserWithEmailAndPassword(email, password);\n  //   return auth.currentUser.updateProfile({\n  //     displayName: name,\n  //   });\n  // }\n\n  const registerWithEmailAndPassword = async (name, email, password) => {\n    try {\n      const res = await auth.createUserWithEmailAndPassword(email, password);\n      const user = res.user;\n      await db.collection(\"users\").add({\n        uid: user.uid,\n        name,\n        authProvider: \"local\",\n        email,\n      });\n    } catch (err) {\n      console.error(err);\n      alert(err.message);\n    }\n  };\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email);\n  }\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logout,\n    resetPassword,\n  };\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}