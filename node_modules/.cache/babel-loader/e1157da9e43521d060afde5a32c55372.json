{"ast":null,"code":"import React, { useState, useEffect, useContext, createContext } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\"; //initialize firebase\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FB_API,\n  authDomain: process.env.REACT_APP_FB_DOMAIN,\n  projectId: process.env.REACT_APP_FB_PROJECT,\n  storageBucket: process.env.REACT_APP_FB_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FB_SENDER,\n  appID: process.env.REACT_APP_FB_APP\n}); // //create a provider\n// const AuthContext = createContext();\n// //hook for child component to get the auth object\n// //and re-render when it changes\n// export const useAuth = () => {\n//   return useContext(AuthContext);\n// };\n// //Provider hook that creates auth object and handles state\n// export const AuthProvider = ({ children }) => {\n//   const [user, setUser] = useState(null);\n//   const [isAuthenticating, setIsAuthenticating] = useState(true);\n//   const sendSignInLinkToEmail = (email) => {\n//     return firebase\n//       .auth()\n//       .sendSignInLinkToEmail(email, {\n//         url: \"http://localhost:3000/confirm\",\n//         handleCodeInApp: true,\n//       })\n//       .then(() => {\n//         return true;\n//       });\n//   };\n//   const signInWithEmailLink = (email, code) => {\n//     return firebase\n//       .auth()\n//       .signInWithEmailLink(email, code)\n//       .then((result) => {\n//         setUser(result.user);\n//         return true;\n//       });\n//   };\n//   const logout = () => {\n//     return firebase\n//       .auth()\n//       .signOut()\n//       .then(() => {\n//         setUser(null);\n//       });\n//   };\n//   //subscribe to user on mount\n//   //cause this sets state in teh callback it will cause any\n//   //component that utilizes this book to re-render with the latest auth object\n//   useEffect(() => {\n//     const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\n//       setUser(user);\n//       setIsAuthenticating(false);\n//     });\n//     //cleanup subscription on unmount\n//     return () => unsubscribe();\n//   }, []);\n//   const values = {\n//     user,\n//     isAuthenticating,\n//     sendSignInLinkToEmail,\n//     signInWithEmailLink,\n//     logout,\n//   };\n//   return (\n//     <AuthContext.Provider value={values}>\n//       {isAuthenticating && children}\n//     </AuthContext.Provider>\n//   );\n// };\n\nexport const auth = app.auth();\nexport default app;","map":{"version":3,"sources":["/Users/fshefa/development1/getfitwithme/src/firebase.js"],"names":["React","useState","useEffect","useContext","createContext","firebase","app","initializeApp","apiKey","process","env","REACT_APP_FB_API","authDomain","REACT_APP_FB_DOMAIN","projectId","REACT_APP_FB_PROJECT","storageBucket","REACT_APP_FB_BUCKET","messagingSenderId","REACT_APP_FB_SENDER","appID","REACT_APP_FB_APP","auth"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,aAAjD,QAAsE,OAAtE;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP,C,CAEA;;AAEA,MAAMC,GAAG,GAAGD,QAAQ,CAACE,aAAT,CAAuB;AACjCC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBADa;AAEjCC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,mBAFS;AAGjCC,EAAAA,SAAS,EAAEL,OAAO,CAACC,GAAR,CAAYK,oBAHU;AAIjCC,EAAAA,aAAa,EAAEP,OAAO,CAACC,GAAR,CAAYO,mBAJM;AAKjCC,EAAAA,iBAAiB,EAAET,OAAO,CAACC,GAAR,CAAYS,mBALE;AAMjCC,EAAAA,KAAK,EAAEX,OAAO,CAACC,GAAR,CAAYW;AANc,CAAvB,CAAZ,C,CAQA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,IAAI,GAAGhB,GAAG,CAACgB,IAAJ,EAAb;AACP,eAAehB,GAAf","sourcesContent":["import React, { useState, useEffect, useContext, createContext } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\n//initialize firebase\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FB_API,\n  authDomain: process.env.REACT_APP_FB_DOMAIN,\n  projectId: process.env.REACT_APP_FB_PROJECT,\n  storageBucket: process.env.REACT_APP_FB_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FB_SENDER,\n  appID: process.env.REACT_APP_FB_APP,\n});\n// //create a provider\n// const AuthContext = createContext();\n\n// //hook for child component to get the auth object\n// //and re-render when it changes\n\n// export const useAuth = () => {\n//   return useContext(AuthContext);\n// };\n// //Provider hook that creates auth object and handles state\n// export const AuthProvider = ({ children }) => {\n//   const [user, setUser] = useState(null);\n//   const [isAuthenticating, setIsAuthenticating] = useState(true);\n\n//   const sendSignInLinkToEmail = (email) => {\n//     return firebase\n//       .auth()\n//       .sendSignInLinkToEmail(email, {\n//         url: \"http://localhost:3000/confirm\",\n//         handleCodeInApp: true,\n//       })\n//       .then(() => {\n//         return true;\n//       });\n//   };\n\n//   const signInWithEmailLink = (email, code) => {\n//     return firebase\n//       .auth()\n//       .signInWithEmailLink(email, code)\n//       .then((result) => {\n//         setUser(result.user);\n//         return true;\n//       });\n//   };\n\n//   const logout = () => {\n//     return firebase\n//       .auth()\n//       .signOut()\n//       .then(() => {\n//         setUser(null);\n//       });\n//   };\n\n//   //subscribe to user on mount\n//   //cause this sets state in teh callback it will cause any\n//   //component that utilizes this book to re-render with the latest auth object\n//   useEffect(() => {\n//     const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\n//       setUser(user);\n//       setIsAuthenticating(false);\n//     });\n\n//     //cleanup subscription on unmount\n//     return () => unsubscribe();\n//   }, []);\n\n//   const values = {\n//     user,\n//     isAuthenticating,\n//     sendSignInLinkToEmail,\n//     signInWithEmailLink,\n//     logout,\n//   };\n\n//   return (\n//     <AuthContext.Provider value={values}>\n//       {isAuthenticating && children}\n//     </AuthContext.Provider>\n//   );\n// };\n\nexport const auth = app.auth();\nexport default app;\n"]},"metadata":{},"sourceType":"module"}