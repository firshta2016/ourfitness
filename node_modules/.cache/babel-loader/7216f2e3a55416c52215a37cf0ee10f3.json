{"ast":null,"code":"var _jsxFileName = \"/Users/fshefa/development1/getfitwithme/src/components/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Form, Button, Card, Alert, FormControl } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Nav } from \"./Nav\";\nimport firebase from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Signup = () => {\n  _s();\n\n  // const displayNameRef = useRef();\n  // const emailRef = useRef();\n  // const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const {\n    signup\n  } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\"); // async function handleSubmit(e) {\n  //   e.preventDefault();\n  //   try {\n  //     setError(\"\");\n  //     setLoading(true);\n  //     await signup(\n  //       emailRef.current.value,\n  //       passwordRef.current.value,\n  //       displayNameRef.current.value\n  //     );\n  //     history.push(\"./Dashboard\");\n  //   } catch {\n  //     setError(\"Failed to create an account\");\n  //   }\n  //   setLoading(false);\n  // }\n\n  async function handleSubmit() {\n    try {\n      setError(\"\");\n      setLoading(true);\n      await firebase.register(name, email, password);\n      history.push(\"./Dashboard\");\n    } catch (error) {\n      setError(\"Failed to create an account\");\n    }\n\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(StyledWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-center mb-4\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"name\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"name\",\n                name: \"name\",\n                autoComplete: \"off\",\n                autoFocus: true,\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"email\",\n                children: \"Email Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"email\",\n                name: \"email\",\n                autoComplete: \"off\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                name: \"password\",\n                type: \"password\",\n                id: \"password\",\n                autoComplete: \"off\",\n                value: password,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"quote\",\n                children: \"Your Favorite Quote\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                name: \"quote\",\n                type: \"text\",\n                id: \"quote\",\n                autoComplete: \"off\",\n                value: quote,\n                onChange: e => setQuote(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"2-100 text-center mt-2\",\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"./Login\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"r9GfcjNdi3s5tXHhXBio2JCK2T0=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = Signup;\nconst StyledWrapper = styled.div`\n  .signup {\n    margin: 50px 25% 0 25%;\n  }\n  .button {\n    margin-top: 20px;\n  }\n`;\n_c2 = StyledWrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Signup\");\n$RefreshReg$(_c2, \"StyledWrapper\");","map":{"version":3,"sources":["/Users/fshefa/development1/getfitwithme/src/components/Signup.js"],"names":["React","useRef","useState","styled","Form","Button","Card","Alert","FormControl","useAuth","Link","useHistory","Nav","firebase","Signup","passwordConfirmRef","signup","error","setError","loading","setLoading","history","name","setName","email","setEmail","password","setPassword","handleSubmit","register","push","e","target","value","quote","setQuote","StyledWrapper","div"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Form, Button, Card, Alert, FormControl } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Nav } from \"./Nav\";\nimport firebase from \"../firebase\";\n\nexport const Signup = () => {\n  // const displayNameRef = useRef();\n  // const emailRef = useRef();\n  // const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const { signup } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // async function handleSubmit(e) {\n  //   e.preventDefault();\n\n  //   try {\n  //     setError(\"\");\n  //     setLoading(true);\n  //     await signup(\n  //       emailRef.current.value,\n  //       passwordRef.current.value,\n  //       displayNameRef.current.value\n  //     );\n  //     history.push(\"./Dashboard\");\n  //   } catch {\n  //     setError(\"Failed to create an account\");\n  //   }\n  //   setLoading(false);\n  // }\n\n  async function handleSubmit() {\n    try {\n      setError(\"\");\n      setLoading(true);\n      await firebase.register(name, email, password);\n      history.push(\"./Dashboard\");\n    } catch (error) {\n      setError(\"Failed to create an account\");\n    }\n    setLoading(false);\n  }\n  return (\n    <StyledWrapper>\n      <Nav />\n      <div className=\"signup\">\n        <Card>\n          <Card.Body>\n            <h2 className=\"text-center mb-4\">Sign Up</h2>\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            {/* <Form onSubmit={handleSubmit}>\n              <Form.Group id=\"fullName\">\n                <Form.Label>Full Name</Form.Label>\n                <Form.Control\n                  type=\"name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                  required\n                />\n              </Form.Group>\n              <Form.Group id=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  required\n                />\n              </Form.Group>\n              <Form.Group id=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                />\n              </Form.Group>\n              <Button disabled={loading} className=\"button 2-100\" type=\"submit\">\n                Sign Up\n              </Button>\n            </Form> */}\n            <form>\n              <FormControl>\n                <InputLabel htmlFor=\"name\">Name</InputLabel>\n                <Input\n                  id=\"name\"\n                  name=\"name\"\n                  autoComplete=\"off\"\n                  autoFocus\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </FormControl>\n              <FormControl margin=\"normal\" required fullWidth>\n                <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n                <Input\n                  id=\"email\"\n                  name=\"email\"\n                  autoComplete=\"off\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </FormControl>\n              <FormControl margin=\"normal\" required fullWidth>\n                <InputLabel htmlFor=\"password\">Password</InputLabel>\n                <Input\n                  name=\"password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"off\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </FormControl>\n              <FormControl margin=\"normal\" required fullWidth>\n                <InputLabel htmlFor=\"quote\">Your Favorite Quote</InputLabel>\n                <Input\n                  name=\"quote\"\n                  type=\"text\"\n                  id=\"quote\"\n                  autoComplete=\"off\"\n                  value={quote}\n                  onChange={(e) => setQuote(e.target.value)}\n                />\n              </FormControl>\n            </form>\n          </Card.Body>\n        </Card>\n        <div className=\"2-100 text-center mt-2\">\n          Already have an account? <Link to=\"./Login\">Log In</Link>\n        </div>\n      </div>\n    </StyledWrapper>\n  );\n};\n\nconst StyledWrapper = styled.div`\n  .signup {\n    margin: 50px 25% 0 25%;\n  }\n  .button {\n    margin-top: 20px;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}