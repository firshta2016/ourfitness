{"ast":null,"code":"var _jsxFileName = \"/Users/fshefa/development1/getfitwithme/src/hooks/useAuth.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\"; //initialize firebase\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet config = {\n  apiKey: process.env.REACT_APP_FB_API,\n  authDomain: process.env.REACT_APP_FB_DOMAIN,\n  projectId: process.env.REACT_APP_FB_PROJECT,\n  storageBucket: process.env.REACT_APP_FB_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FB_SENDER,\n  appID: process.env.REACT_APP_FB_APP\n};\nfirebase.initializeApp(config); //create a provider\n\nconst AuthContext = /*#__PURE__*/createContext(); //hook for child component to get the auth object\n//and re-render when it changes\n\nexport const useAuth = () => {\n  _s();\n\n  return useContext(AuthContext);\n}; //Provider hook that creates auth object and handles state\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [user, setUser] = useState(null);\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n\n  const sendSignInLinkToEmail = email => {\n    return firebase.auth().sendSignInLinkToEmail(email, {\n      url: \"http://localhost:3000/confirm\",\n      handleCodeInApp: true\n    }).then(() => {\n      return true;\n    });\n  };\n\n  const signInWithEmailLink = (email, code) => {\n    return firebase.auth().signInWithEmailLink(email, code).then(result => {\n      setUser(result.user);\n      return true;\n    });\n  };\n\n  const logout = () => {\n    return firebase.auth().signOut().then(() => {\n      setUser(null);\n    });\n  }; //subscribe to user on mount\n  //cause this sets state in teh callback it will cause any\n  //component that utilizes this book to re-render with the latest auth object\n\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(user => {\n      setUser(user);\n      setIsAuthenticating(false);\n    }); //cleanup subscription on unmount\n\n    return () => unsubscribe();\n  }, []);\n  const values = {\n    user,\n    isAuthenticating,\n    sendSignInLinkToEmail,\n    signInWithEmailLink,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: values,\n    children: isAuthenticating && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AuthProvider, \"x2ysLbFWVl2Vse86GigDsRu6nhc=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/fshefa/development1/getfitwithme/src/hooks/useAuth.js"],"names":["React","useState","useEffect","useContext","createContext","firebase","config","apiKey","process","env","REACT_APP_FB_API","authDomain","REACT_APP_FB_DOMAIN","projectId","REACT_APP_FB_PROJECT","storageBucket","REACT_APP_FB_BUCKET","messagingSenderId","REACT_APP_FB_SENDER","appID","REACT_APP_FB_APP","initializeApp","AuthContext","useAuth","AuthProvider","children","user","setUser","isAuthenticating","setIsAuthenticating","sendSignInLinkToEmail","email","auth","url","handleCodeInApp","then","signInWithEmailLink","code","result","logout","signOut","unsubscribe","onAuthStateChanged","values"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,aAAjD,QAAsE,OAAtE;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP,C,CAEA;;;AAEA,IAAIC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBADT;AAEXC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,mBAFb;AAGXC,EAAAA,SAAS,EAAEL,OAAO,CAACC,GAAR,CAAYK,oBAHZ;AAIXC,EAAAA,aAAa,EAAEP,OAAO,CAACC,GAAR,CAAYO,mBAJhB;AAKXC,EAAAA,iBAAiB,EAAET,OAAO,CAACC,GAAR,CAAYS,mBALpB;AAMXC,EAAAA,KAAK,EAAEX,OAAO,CAACC,GAAR,CAAYW;AANR,CAAb;AAQAf,QAAQ,CAACgB,aAAT,CAAuBf,MAAvB,E,CACA;;AACA,MAAMgB,WAAW,gBAAGlB,aAAa,EAAjC,C,CAEA;AACA;;AAEA,OAAO,MAAMmB,OAAO,GAAG,MAAM;AAAA;;AAC3B,SAAOpB,UAAU,CAACmB,WAAD,CAAjB;AACD,CAFM,C,CAGP;;GAHaC,O;;AAIb,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB1B,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAAC2B,gBAAD,EAAmBC,mBAAnB,IAA0C5B,QAAQ,CAAC,IAAD,CAAxD;;AAEA,QAAM6B,qBAAqB,GAAIC,KAAD,IAAW;AACvC,WAAO1B,QAAQ,CACZ2B,IADI,GAEJF,qBAFI,CAEkBC,KAFlB,EAEyB;AAC5BE,MAAAA,GAAG,EAAE,+BADuB;AAE5BC,MAAAA,eAAe,EAAE;AAFW,KAFzB,EAMJC,IANI,CAMC,MAAM;AACV,aAAO,IAAP;AACD,KARI,CAAP;AASD,GAVD;;AAYA,QAAMC,mBAAmB,GAAG,CAACL,KAAD,EAAQM,IAAR,KAAiB;AAC3C,WAAOhC,QAAQ,CACZ2B,IADI,GAEJI,mBAFI,CAEgBL,KAFhB,EAEuBM,IAFvB,EAGJF,IAHI,CAGEG,MAAD,IAAY;AAChBX,MAAAA,OAAO,CAACW,MAAM,CAACZ,IAAR,CAAP;AACA,aAAO,IAAP;AACD,KANI,CAAP;AAOD,GARD;;AAUA,QAAMa,MAAM,GAAG,MAAM;AACnB,WAAOlC,QAAQ,CACZ2B,IADI,GAEJQ,OAFI,GAGJL,IAHI,CAGC,MAAM;AACVR,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KALI,CAAP;AAMD,GAPD,CA1B4C,CAmC5C;AACA;AACA;;;AACAzB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuC,WAAW,GAAGpC,QAAQ,CAAC2B,IAAT,GAAgBU,kBAAhB,CAAoChB,IAAD,IAAU;AAC/DC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,KAHmB,CAApB,CADc,CAMd;;AACA,WAAO,MAAMY,WAAW,EAAxB;AACD,GARQ,EAQN,EARM,CAAT;AAUA,QAAME,MAAM,GAAG;AACbjB,IAAAA,IADa;AAEbE,IAAAA,gBAFa;AAGbE,IAAAA,qBAHa;AAIbM,IAAAA,mBAJa;AAKbG,IAAAA;AALa,GAAf;AAQA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEI,MAA7B;AAAA,cACGf,gBAAgB,IAAIH;AADvB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA7DM;;IAAMD,Y;;KAAAA,Y","sourcesContent":["import React, { useState, useEffect, useContext, createContext } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\n//initialize firebase\n\nlet config = {\n  apiKey: process.env.REACT_APP_FB_API,\n  authDomain: process.env.REACT_APP_FB_DOMAIN,\n  projectId: process.env.REACT_APP_FB_PROJECT,\n  storageBucket: process.env.REACT_APP_FB_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FB_SENDER,\n  appID: process.env.REACT_APP_FB_APP,\n};\nfirebase.initializeApp(config);\n//create a provider\nconst AuthContext = createContext();\n\n//hook for child component to get the auth object\n//and re-render when it changes\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n//Provider hook that creates auth object and handles state\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n\n  const sendSignInLinkToEmail = (email) => {\n    return firebase\n      .auth()\n      .sendSignInLinkToEmail(email, {\n        url: \"http://localhost:3000/confirm\",\n        handleCodeInApp: true,\n      })\n      .then(() => {\n        return true;\n      });\n  };\n\n  const signInWithEmailLink = (email, code) => {\n    return firebase\n      .auth()\n      .signInWithEmailLink(email, code)\n      .then((result) => {\n        setUser(result.user);\n        return true;\n      });\n  };\n\n  const logout = () => {\n    return firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        setUser(null);\n      });\n  };\n\n  //subscribe to user on mount\n  //cause this sets state in teh callback it will cause any\n  //component that utilizes this book to re-render with the latest auth object\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\n      setUser(user);\n      setIsAuthenticating(false);\n    });\n\n    //cleanup subscription on unmount\n    return () => unsubscribe();\n  }, []);\n\n  const values = {\n    user,\n    isAuthenticating,\n    sendSignInLinkToEmail,\n    signInWithEmailLink,\n    logout,\n  };\n\n  return (\n    <AuthContext.Provider value={values}>\n      {isAuthenticating && children}\n    </AuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}